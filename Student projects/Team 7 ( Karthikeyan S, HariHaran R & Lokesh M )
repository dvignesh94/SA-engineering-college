/requirements.txt
langchain
langchain-ollama
langchain-chroma
pandas
fastapi
uvicorn

/vector.py

from langchain_ollama import  OllamaEmbeddings
from langchain_chroma import Chroma
from langchain_core.documents import Document
import os
import pandas as pd

df = pd.read_csv("realistic_restaurant_reviews.csv")
embeddings = OllamaEmbeddings(model="mxbai-embed-large")

db_location = "./chroma_langchain_db"
add_documents = not os.path.exists(db_location)

if add_documents:
    documents = []
    ids = []

    for i, row in df.iterrows():
        document = Document(
            page_content=row["Title"] + " " + row["Review"],
            metadata={
                "rating": row["Rating"],
                "date": row["Date"]
            },
            id = str(i)
        )
        ids.append(str(i))
        documents.append(document)

vector_store = Chroma(
    collection_name="restaurant_reviews",
    persist_directory=db_location,  
    embedding_function=embeddings
)


if add_documents:
    vector_store.add_documents(documents, ids=ids)

retriever = vector_store.as_retriever(
    search_kwargs={
        "k": 5
    }
)

/main.py

from langchain_ollama.llms import OllamaLLM
from langchain_core.prompts import ChatPromptTemplate
from vector import retriever

model = OllamaLLM(model="llama3.2")

templete = """

You are an exeprt in answering questions about a pizza restaurant

Here are some relevent details:{reviews}

Here is the question: {question}
"""
prompt = ChatPromptTemplate.from_template(templete)
chain = prompt | model

while True:
    print("\n\n--------------------------------------------------------------------")
    question = input("Ask your question (q to quit): ")
    print("--------------------------------------------------------------------\n\n")
    if question.lower() == 'q':
        break

    reviews = retriever.invoke(question)
    result = chain.invoke({"reviews": [], "question": question})
    print(result)
